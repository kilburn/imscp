#!/usr/bin/perl

# i-MSCP - internet Multi Server Control Panel
# Copyright (C) 2010-2017 by Laurent Declercq <l.declercq@nuxwin.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

=head1 NAME

imscp-mountall - Mount or umount filesystems by reading entries from i-MSCP fstab-like file

=head1 SYNOPSIS

 imscp-mountall [options]... start|stop

=cut

use strict;
use warnings;
use FindBin;
use lib "$FindBin::Bin/..", "$FindBin::Bin/../PerlLib", "$FindBin::Bin/../PerlVendor";
use iMSCP::Bootstrapper;
use iMSCP::Debug;
use iMSCP::Getopt;
use iMSCP::Mount qw/ mount umount isMountpoint /;
use File::Basename;
use POSIX qw(locale_h);
use locale;

setlocale(LC_ALL, 'C.UTF-8');
$ENV{'LANG'} = 'C.UTF-8';

sub process
{
    my $action = shift;

    my $rs = 0;
    my $fstab = "$main::imscpConfig{'CONF_DIR'}/mounts/mounts.conf";
    return $rs unless -f $fstab;
    
    open my $fh, '<', $fstab or die( sprintf( 'Could not open %s: %s', $fstab, $! ) );
    my @fstabEntries = <$fh>;

    for($action eq 'start' ? @fstabEntries : reverse @fstabEntries) {
        next if /^(#|$)/; # Ignore comment and empty lines
        chomp;
        my $entryFields;
        @{$entryFields}{ qw/ fs_spec fs_file fs_vfstype fs_mntops / } = split;
        
        if($action eq 'start') {
            $rs = mount($entryFields) unless isMountpoint($entryFields->{'fs_file'});
        } else {
            $rs = umount($entryFields->{'fs_file'});
        }

        last if $rs;
    }

    $rs;
}

newDebug('imscp_mountall.log');

iMSCP::Getopt->parseNoDefault(sprintf('Usage: perl %s [OPTION]... start|stop', basename($0)) . qq {

Mount or umount filesystems by reading entries i-MSCP fstab-like file.

OPTIONS:
 -d,    --debug         Enable debug mode.
 -v,    --verbose       Enable verbose mode.},
 'debug|d'   => sub { iMSCP::Getopt->debug(@_) },
 'verbose|v' => sub { setVerbose(@_); }
);

iMSCP::Bootstrapper->getInstance()->boot(
    {
        mode            => 'backend',
        norequirements  => 1,
        nokeys          => 1,
        nodatabase      => 1,
        nolock          => 1,
        config_readonly => 1
    }
);

my $action = shift;
defined $action && $action =~ /^(?:start|stop)$/ or iMSCP::Getopt->showUsage();
exit process($action);

=head1 AUTHOR

Laurent Declercq <l.declercq@nuxwin.com>

=cut
